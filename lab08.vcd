$date
	Sat Oct 24 19:55:48 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 8 ! word [7:0] $end
$var wire 4 " salida_2 [3:0] $end
$var wire 12 # salida [11:0] $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 3 & F [2:0] $end
$var reg 12 ' address [11:0] $end
$var reg 1 ( clock $end
$var reg 1 ) enable $end
$var reg 1 * load $end
$var reg 1 + reset $end
$var integer 32 , i [31:0] $end
$scope module ALU1 $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 3 / F [2:0] $end
$var reg 4 0 Resultado [3:0] $end
$upscope $end
$scope module Contador $end
$var wire 1 ( clk $end
$var wire 1 ) enable $end
$var wire 1 * load $end
$var wire 1 + reset $end
$var reg 12 1 count [11:0] $end
$upscope $end
$scope module Memoria $end
$var wire 12 2 address [11:0] $end
$var wire 8 3 word [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
1(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
0(
#2
b0 #
b0 1
1(
1+
#3
0(
#4
1(
0+
0*
0)
#5
0(
#6
1(
#7
0(
#8
1(
#9
0(
#10
1(
1)
#11
0(
#12
1(
b1 #
b1 1
#13
0(
#14
1(
b10 #
b10 1
#15
0(
#16
1(
b11 #
b11 1
#17
0(
#18
1(
b100 #
b100 1
#19
0(
#20
1(
b101 #
b101 1
1*
#21
0(
#22
1(
b100010 #
b100010 1
0*
#23
0(
#24
1(
b100011 #
b100011 1
#25
0(
#26
1(
b100100 #
b100100 1
#27
0(
#28
1(
b100101 #
b100101 1
#29
0(
#30
1(
b100110 #
b100110 1
0)
#31
0(
#32
1(
#33
0(
#34
1(
#35
0(
#36
1(
#37
0(
#38
1(
b0 ,
#39
0(
#40
1(
b1 ,
b10100010 !
b10100010 3
b0 '
b0 2
#41
0(
#42
1(
b10 ,
b10010010 !
b10010010 3
b1 '
b1 2
#43
0(
#44
1(
b11 ,
b100111 !
b100111 3
b10 '
b10 2
#45
0(
#46
1(
b100 ,
b1001011 !
b1001011 3
b11 '
b11 2
#47
0(
#48
1(
b101 ,
b101000 !
b101000 3
b100 '
b100 2
#49
0(
#50
1(
b110 ,
b10111 !
b10111 3
b101 '
b101 2
#51
0(
#52
1(
b111 ,
b10000100 !
b10000100 3
b110 '
b110 2
#53
0(
#54
1(
b1000 ,
b1010011 !
b1010011 3
b111 '
b111 2
#55
0(
#56
1(
b1001 ,
b1011110 !
b1011110 3
b1000 '
b1000 2
#57
0(
#58
1(
b1010 ,
b10110101 !
b10110101 3
b1001 '
b1001 2
#59
0(
#60
1(
b101 %
b101 .
b10 $
b10 -
#61
0(
#62
1(
b0 "
b0 0
b0 &
b0 /
#63
0(
#64
1(
b111 "
b111 0
b1 &
b1 /
#65
0(
#66
1(
b10 &
b10 /
#67
0(
#68
1(
b10 "
b10 0
b100 &
b100 /
#69
0(
#70
1(
b1010 "
b1010 0
b101 &
b101 /
#71
0(
#72
1(
b1101 "
b1101 0
b110 &
b110 /
#73
0(
#74
1(
b1 "
b1 0
b111 &
b111 /
#75
0(
#76
1(
b0 "
b0 0
b0 &
b0 /
#77
0(
#78
1(
b1010 $
b1010 -
#79
0(
#80
1(
b111 &
b111 /
#81
0(
#82
1(
